/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package newlibrary;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import static newlibrary.search.buildTableModel;
import java.awt.Font;

/**
 *
 * @author Sandeep
 */
public class CheckOut extends javax.swing.JFrame {

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BookIdTF = new javax.swing.JTextField();
        BranchIdTF = new javax.swing.JTextField();
        CardNoTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(Color.LIGHT_GRAY);

        jLabel1.setFont(new Font("Centaur", Font.PLAIN, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Check out the book");

        jLabel2.setText("Book Id:");

        jLabel3.setText("Branch Id");

        jLabel4.setText("Card No:");

        BookIdTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookIdTFActionPerformed(evt);
            }
        });
        BookIdTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BookIdTFKeyPressed(evt);
            }
        });

        BranchIdTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BranchIdTFKeyPressed(evt);
            }
        });

        CardNoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CardNoTFKeyPressed(evt);
            }
        });

        jButton1.setText("Check Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back to Main Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BranchIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(11, 11, 11)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(CardNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BookIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BranchIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
         Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "2934991");
            Statement stmt=conn.createStatement();
            stmt.execute("use library_server;");
            PreparedStatement preparedstatement = null;
            String book_id;
            int branch_id;
            int card_no,i=0;
            
            if(BookIdTF.getText().equals("")||BranchIdTF.getText().equals("")||CardNoTF.getText().equals(""))
            {
                if(BookIdTF.getText().equals(""))
                {
                     jLabel5.setForeground(Color.red);
                    jLabel5.setText("This field is required");
                }
                if(BranchIdTF.getText().equals(""))
                {
                    jLabel6.setForeground(Color.red);
                    jLabel6.setText("This field is required");
                
                }
                if(CardNoTF.getText().equals(""))
                {
                    jLabel7.setForeground(Color.red);
                    jLabel7.setText("This field is required");
                }
                
            }
            else
            {
            book_id=BookIdTF.getText();
            branch_id=Integer.parseInt(BranchIdTF.getText());
            card_no=Integer.parseInt(CardNoTF.getText());
            
         //checking if book id is valid or not
                if(book_id.length()==10)
                {
                    String qry="select * from book where book_id='"+book_id+"';";
                    ResultSet rs = stmt.executeQuery(qry);
                    if(rs.next()!=true)
                    {
                           jLabel5.setForeground(Color.red);
                           jLabel5.setText("No such Book Id exists in our system");
                    }
                    else
                    {
                            jLabel5.setForeground(Color.blue);
                                    
                            jLabel5.setText("Valid");
                    }
                }    
                else                 {
                    jLabel5.setForeground(Color.red);
                    jLabel5.setText("It is not a valid Book id");
                }
                
             
                 
           //checking if branch_id is correct or not
               if((branch_id>5) ||( branch_id <1))//if brnch id is out of range
                {
                    jLabel6.setForeground(Color.red);
                    jLabel6.setText("Branch ID should be in the range 1- 5");
                }
                else
                {
                     jLabel6.setForeground(Color.blue);
                     jLabel6.setText("valid");
                }
                
                if(jLabel5.getText().equalsIgnoreCase("valid")&&(jLabel6.getText().equalsIgnoreCase("valid")))
                {
                    String qry="select no_of_copies from book_copies where book_id='"+book_id+"' and branch_id="+branch_id+";";
                    ResultSet rs = stmt.executeQuery(qry);
                    int books = 0;
                    while(rs.next())
                    {
                           books=rs.getInt("no_of_copies");
                    }
                    qry="select count(*) AS TAKEN from book_loans where book_id= '"+book_id+"' and date_in='NULL'and branch_id="+branch_id+";";
                    rs=stmt.executeQuery(qry);
                    while(rs.next())
                    {
                            int taken=rs.getInt("TAKEN");
                            int books_left=books-taken;
                           if(books_left>0)
                           {
                                i=1;
                                jLabel6.setForeground(Color.blue);
                                jLabel6.setText("valid");
                                
                           }
                           else
                           {
                                jLabel6.setForeground(Color.blue);
                                jLabel6.setText("valid,but not enough copies are left to check out");
                               
                           }
                    }
                    
                }
               
                //checking if card no is valid or not
                
                String qry="select min(card_no) as MIN,max(card_no) AS MAX from  borrower;";
                ResultSet rs=stmt.executeQuery(qry);
                int   min,max;
                while(rs.next())
                 {
                       min  =rs.getInt("MIN");
                       max =rs.getInt("MAX");
                       System.out.println( "MIN AND MAX ARE"+min+"and"+max);
                 
                        if(card_no>max || card_no<min)//if card no is nt registerd
                         {
                             jLabel7.setForeground(Color.red);
                             jLabel7.setText("Not an assigned card no,create new and try");
                         } 
                        else
                        {
                            jLabel7.setForeground(Color.blue);
                            jLabel7.setText("valid");
                        }
                      
                 }
                
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	    Date date = new Date();
            String dateout=dateFormat.format(date);
	    System.out.println("check_out_date:"+dateout);
           
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, 14);
            System.out.println("Due Date:"+dateFormat.format(cal.getTime()));
            String duedate=dateFormat.format(cal.getTime());
           
            if(i==1 &&("valid".equals(jLabel7.getText())))
            {
                 qry="select COUNT(*)as C from book_loans where card_no="+card_no+" and date_in='NULL';";
                System.out.println(qry);
                 rs=stmt.executeQuery(qry);
                while(rs.next())
                {
                    int j=rs.getInt("C");

                    if(j>=3)
                    {
                         jLabel8.setForeground(Color.red);
                         jLabel8.setText("all details are correct,but u already have 3 books");
                    }
                    else
                    {
                        jLabel8.setForeground(Color.blue);
                        jLabel8.setText("all details are correct");
                        String datein="NULL";
                        int k=bookloan(conn,preparedstatement,book_id,branch_id,card_no,dateout,datein,duedate);
                        if(k==1)
                        {
                            JOptionPane.showMessageDialog(null,"Insert Successful"); 
                        }
                        
                    }
               }
            }
            else
            {
                jLabel8.setForeground(Color.red);
                jLabel8.setText("Sorry! You can check in,enter appropriate details");
            }
            }
                
            }

       catch (SQLException ex) {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

     public static int bookloan(Connection connection,PreparedStatement preparedstatement,String bookid,int branchid,int cardno,String dateout,String datein,String duedate)
   throws SQLException
   {
		    preparedstatement=connection.prepareStatement("insert into book_loans(book_id,branch_id,card_no,date_out,date_in,due_date) values(?,?,?,?,?,?)");
		    preparedstatement.setString(1, bookid);
		    preparedstatement.setInt(2,branchid );
                    preparedstatement.setInt(3,cardno);
                    preparedstatement.setString(4,dateout);
                    preparedstatement.setString(5,datein);
                    preparedstatement.setString(6,duedate);
		    int k=preparedstatement.executeUpdate();
                    return k;
   }  
    private void BookIdTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookIdTFActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_BookIdTFActionPerformed

    public void close()
    {
    WindowEvent winclosingevent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosingevent);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          close();
        homepage h=new homepage();
        h.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BranchIdTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BranchIdTFKeyPressed
        // TODO add your handling code here:
        jLabel6.setText("");
        
    }//GEN-LAST:event_BranchIdTFKeyPressed

    private void BookIdTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BookIdTFKeyPressed
        // TODO add your handling code here:
        jLabel5.setText("");
        
    }//GEN-LAST:event_BookIdTFKeyPressed

    private void CardNoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CardNoTFKeyPressed
        // TODO add your handling code here:
        jLabel7.setText("");
        
    }//GEN-LAST:event_CardNoTFKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookIdTF;
    private javax.swing.JTextField BranchIdTF;
    private javax.swing.JTextField CardNoTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
