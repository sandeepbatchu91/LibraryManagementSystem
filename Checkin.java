package newlibrary;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import static newlibrary.search.buildTableModel;
import java.awt.Font;

/**
 *
 * @author Sandeep
 */
public class Checkin extends javax.swing.JFrame {

    /**
     * Creates new form checkout
     */
    public Checkin() {
        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BookIdTF = new javax.swing.JTextField();
        CardNoTF = new javax.swing.JTextField();
        FnameTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        LnameTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 255));

        jPanel1.setBackground(Color.LIGHT_GRAY);

        jLabel1.setFont(new Font("Cordia New", Font.PLAIN, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select and check in the book ");

        jLabel2.setText("Book Id:");

        jLabel3.setText("Card No:");

        jLabel4.setText("Borrower FName/Part of the FName:");

        BookIdTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BookIdTFKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BookIdTFKeyTyped(evt);
            }
        });

        CardNoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CardNoTFKeyPressed(evt);
            }
        });

        FnameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FnameTFKeyPressed(evt);
            }
        });

        jButton1.setText("Search for Borowwed Books");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Back to Main Menu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Borrower LName/Part of the LName:");

        LnameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LnameTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BookIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(20, 20, 20)
                                        .addComponent(LnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CardNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(FnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CardNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(LnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
        public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

    ResultSetMetaData metaData = rs.getMetaData();

    // names of columns
    Vector<String> columnNames = new Vector<String>();
    int columnCount = metaData.getColumnCount();
    for (int column = 1; column <= columnCount; column++) {
        columnNames.add(metaData.getColumnName(column));
    }

    // data of the table
    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
    while (rs.next()) {
        Vector<Object> vector = new Vector<Object>();
        for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
            vector.add(rs.getObject(columnIndex));
        }
        data.add(vector);
    }

    return new DefaultTableModel(data, columnNames);

}
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                
        Connection conn = null;
        try
        { 
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "2934991");
            Statement stmt=conn.createStatement();
            stmt.execute("use library_server;");
            PreparedStatement preparedstatement = null;
            String book_id="",fname="",lname="";
            String qry;
            ResultSet rs;
            int card_no;
             //if no field is given
             if((BookIdTF.getText().equals(""))&&(FnameTF.getText().equals(""))&& (LnameTF.getText().equals("")) && (CardNoTF.getText().equals("")))
             {
                 jLabel10.setForeground(Color.red);
                 jLabel10.setText("All fields cant be empty");
             }
             //atleast one is selected
             else
             {
                System.out.println(" its working");
                //checking book id
                   if(BookIdTF.getText().equals(""))
                   {
                         jLabel6.setForeground(Color.blue);         
                         jLabel6.setText("No Value");
                   }
                   else
                   { 
                         book_id=BookIdTF.getText();
                         qry="select * from book where book_id like'%"+book_id+"%';";
                         rs = stmt.executeQuery(qry);
                         if(rs.next()!=true)
                         {
                                jLabel6.setForeground(Color.red);
                                jLabel6.setText("No book Id with this pattern exists in our system");
                          }
                        else
                        {
                                jLabel6.setForeground(Color.blue);         
                                jLabel6.setText("Valid");
                        }
                    }

                    //checking for card no
                    if(CardNoTF.getText().equals(""))
                    {
                      jLabel7.setForeground(Color.blue);
                      jLabel7.setText("No Value");
                     
                    }
                    else
                    {
                        card_no=Integer.parseInt(CardNoTF.getText());
                        
                        qry="select * from borrower where card_no like '%"+card_no+"%';";
                        rs = stmt.executeQuery(qry);
                        if(rs.next()!=true)
                        {
                            jLabel7.setForeground(Color.red);
                            jLabel7.setText("No such card no exists in our system");
                        }
                        else
                        {
                             jLabel7.setForeground(Color.blue);            
                             jLabel7.setText("Valid");
                        }
                    }
                   
                   //checking for fname 
                    if(FnameTF.getText().isEmpty())
                     {
                            jLabel8.setForeground(Color.blue);            
                            jLabel8.setText("No value");
                           
                      }
                     else
                     {
                           qry="select * from borrower where fname like'%"+fname+"%';";
                           rs = stmt.executeQuery(qry);
                           if(rs.next()!=true)
                           {
                                jLabel8.setForeground(Color.red);            
                                jLabel8.setText("No such fname pattern exists");
                               
                           }
                           else
                           {
                                jLabel8.setForeground(Color.blue);            
                                jLabel8.setText("Valid");
                           }
                      }
                    //checking for lname 
                    if(LnameTF.getText().isEmpty())
                    {
                         jLabel9.setForeground(Color.blue);            
                         jLabel9.setText("No Value");
                          
                     }
                    
                     else
                    {
                         qry="select * from borrower where lname like'%"+lname+"%';";
                           rs = stmt.executeQuery(qry);
                           if(rs.next()!=true)
                           {
                                jLabel9.setForeground(Color.red);            
                                jLabel9.setText("No such lname pattern exists");
                               
                           }
                           else
                           {
                                jLabel9.setForeground(Color.blue);            
                                jLabel9.setText("Valid");
                           }
                    }
                    //checking both lname and fname compatability
                    
                    if(!(LnameTF.getText().isEmpty())&& !(FnameTF.getText().isEmpty()))
                    {
                        System.out.println("we entered fname n lname check");
                        qry="select * from borrower where fname like'%"+fname+"%' and lname like'%"+lname+"%';";
                        rs = stmt.executeQuery(qry);
                        if(rs.next()!=true)
                        {
                               jLabel8.setForeground(Color.red);
                               jLabel9.setForeground(Color.red);
                               jLabel8.setText("No such fname lname exists in our system");
                               jLabel9.setText("No such fname lname exists in our system");
                        }
                       
                    }
                    
                    fname=FnameTF.getText();
                    lname=LnameTF.getText();
                    book_id=BookIdTF.getText();
                  if(CardNoTF.getText().isEmpty())
                  {
                      //do nothing
                      card_no=9;
                  }
                     
                  else
                    card_no=Integer.parseInt(CardNoTF.getText());
                  System.out.println("we are before the blue condition");
                  
                  if(jLabel6.getForeground().equals(Color.blue)||jLabel7.getForeground().equals(Color.blue)||jLabel8.getForeground().equals(Color.blue)||jLabel9.getForeground().equals(Color.blue))
                  {
                     
                       stmt.execute("use library_server;");
                      System.out.println("we are in the blue condition");
                  
                            qry="Select bl.loan_id AS Lid,br.fname AS fn,br.lname AS ln,bl.book_id AS bid,bl.Branch_id AS brid,bl.card_no,bl.Date_out,bl.Due_date,bl.Date_in\n" +
                            "from book_loans bl,borrower br\n" +
                            "where bl.card_no=br.card_no and bl.book_id like '%"+book_id+"%' and bl.card_no like '%"+card_no+"%'and fname like '%"+fname+"%' and lname like '%"+lname+"%';";
                         rs = stmt.executeQuery(qry);
                         
                         System.out.println(qry);
                         if(rs.next()==false)
                         {
                             jLabel10.setForeground(Color.red);
                             jLabel10.setText("There are no books with given details ");
                         }
                          else
                         {
                             rs.previous();
                            JTable table = new JTable(buildTableModel(rs));
                            JOptionPane.showMessageDialog(null, new JScrollPane(table));
                            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                            Date date = new Date();
                            String date_in=dateFormat.format(date);
                            System.out.println("check_out_date:"+date_in);
                            
                            int i=table.getSelectedRow();
                            int lid=(int) table.getValueAt(i, 0);
                            String f=(String)table.getValueAt(i, 1);
                            String l=(String)table.getValueAt(i, 2);
                            String b=(String)table.getValueAt(i, 3);
                            int br=(int)Integer.valueOf((String) table.getValueAt(i,4));
                            int cn=(int)table.getValueAt(i,5);
                            String di=(String)table.getValueAt(i,8);
                            int reply= JOptionPane.showConfirmDialog(null,"Are you sure you want to check in this book with loan id"+lid);
                            if(reply== JOptionPane.YES_OPTION) 
                            {
                                if("NULL".equals(di) || di==null)
                               {
                                 System.out.println("the  loan id selected to update is: "+lid+" with fname: "+f+" with book id: "+b+" at branch "+br);
                                  qry="UPDATE `book_loans` SET\n"+
                                    "`Date_in` = '"+date_in+"' WHERE `Loan_id` = "+lid+" AND `Book_id` = '"+b+"' AND `Branch_id` ="+br+" AND `Card_no` = "+cn+";\n";
                                  System.out.println(qry);
                                    int j=stmt.executeUpdate(qry);
                                    if(j==1)
                                    {
                                        JOptionPane.showMessageDialog(null,"checked in successfully");
                                    }
                                   
                                   else
                                   {
                                       JOptionPane.showMessageDialog(null,"check in failed");
                                   }
                                }
                                else
                               {
                                        JOptionPane.showMessageDialog(null,"Its already checked-in");
                               }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Check-In Cancelled","CANCEL",JOptionPane.INFORMATION_MESSAGE);
                            }
                         }   
                  }
                  else
                  {
                      jLabel10.setText("sorry! please enter correct details");
                  }
               } 
           }    
        catch (SQLException ex) {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void close()
    {
    WindowEvent winclosingevent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosingevent);
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        close();  
        homepage h=new homepage();
        h.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void BookIdTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BookIdTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_BookIdTFKeyTyped

    private void BookIdTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BookIdTFKeyPressed
        // TODO add your handling code here:
        jLabel10.setText("");
        jLabel6.setText("");
        jLabel6.setForeground(Color.blue);
    }//GEN-LAST:event_BookIdTFKeyPressed

    private void CardNoTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CardNoTFKeyPressed
        // TODO add your handling code here:
        jLabel10.setText("");
        jLabel7.setText("");
        jLabel7.setForeground(Color.blue);
    }//GEN-LAST:event_CardNoTFKeyPressed

    private void FnameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnameTFKeyPressed
        // TODO add your handling code here:
        jLabel10.setText("");
        jLabel8.setText("");
        jLabel8.setForeground(Color.blue);
    }//GEN-LAST:event_FnameTFKeyPressed

    private void LnameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LnameTFKeyPressed
        // TODO add your handling code here:
        jLabel10.setText("");
        jLabel9.setText("");
        jLabel9.setForeground(Color.blue);
    }//GEN-LAST:event_LnameTFKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Checkin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookIdTF;
    private javax.swing.JTextField CardNoTF;
    private javax.swing.JTextField FnameTF;
    private javax.swing.JTextField LnameTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
