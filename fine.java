/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package newlibrary;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import static newlibrary.search.buildTableModel;
import java.awt.Font;

/**
 *
 * @author Sandeep
 */
public class fine extends javax.swing.JFrame {

    /**
     * Creates new form fine
     */
    public fine() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CnTF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(Color.LIGHT_GRAY);
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 153)));

        jLabel1.setFont(new Font("Comic Sans MS", Font.PLAIN, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GET THE FINE AMOUNT");

        jLabel2.setText("Click here to get the entire list---->");

        jButton1.setText("REFRESH AND DISPLAY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Want to view how much you owe ?");

        jLabel4.setText("Card no :");

        jButton2.setText("Find ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Make Payment");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Back to home page");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(48, 48, 48)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(87, 87, 87)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(23, 23, 23)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "2934991");
            Statement stmt=conn.createStatement();
            stmt.execute("use library_server;");
            ResultSet rs;
        
            if(CnTF.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null,"please enter card no");
            }
            else{
            int cardno=Integer.parseInt(CnTF.getText());
           String qry="select min(card_no) as MIN,max(card_no) AS MAX from  borrower;";
            rs=stmt.executeQuery(qry);
                int   min = 0,max = 0;
                while(rs.next())
                 {
                       min  =rs.getInt("MIN");
                       max =rs.getInt("MAX");
                       System.out.println( "MIN AND MAX ARE"+min+"and"+max);
                   }
                
            if(cardno>max || cardno<min)//if card no is nt registerd
             {
                JOptionPane.showMessageDialog(null,"card num is not valid","ERROR" ,JOptionPane.ERROR_MESSAGE);
             }
           
            else
            {
                
                 qry="select f.loan_id,f.fine_amt,f.paid from book_loans bl,fines f where f.loan_id=bl.loan_id and bl.card_no="+cardno+" and paid=false;";
                 rs=stmt.executeQuery(qry);
                 if(rs.next())
                 {
                     rs.previous();
                     JTable table = new JTable(buildTableModel(rs));
                     JOptionPane.showMessageDialog(null, new JScrollPane(table));
               } 
                else
                 {
                     JOptionPane.showMessageDialog(null,"NO FINES FOR THIS CARD NO");
                 }
            }
            }
        }
         catch(SQLException ex)
        {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "2934991");
            Statement stmt=conn.createStatement();
            stmt.execute("use library_server;");
            ResultSet rs;
            String qry="select count(*) as count from book_loans";
            rs=stmt.executeQuery(qry);
            int c = 0;
            while(rs.next())
            {
                c=rs.getInt("count");
            }
            System.out.println("valueof c"+c);
            qry="Select * from book_loans;";
            rs=stmt.executeQuery(qry);
            int[] lid=new int[c];
            
            String[] date_in=new String[c];
            String[] duedate=new String[c];
            int i=0;
            while(rs.next())//retrvng values frm book loans to check them
            {
                lid[i]=rs.getInt("loan_id");
                date_in[i]=rs.getString("Date_in");
                duedate[i]=rs.getString("Due_date");
                i++;
            }
            for(int j=0;j<c;j++)// for each tuple in books_loans
            {
                int exists=0;
                boolean paid = false;
                double newfine,fineamt = 0;
                int no_of_days=0,nod=0;
                if("NULL".equals(date_in[j])|| date_in[j] == null)//finds diff btwn duedate n todays date
                {
                    Date d1,d2;
                    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    Date date = new Date();
                    String today=dateFormat.format(date);
                    d1=dateoperations.converttodate(duedate[j]);
                    d2=dateoperations.converttodate(today);
                    long diffInMillies = d2.getTime()- d1.getTime();
                    no_of_days=(int)TimeUnit.DAYS.convert(diffInMillies,TimeUnit.MILLISECONDS);
                    System.out.println("if numbr of days:"+no_of_days+"for loan id"+lid[j]);
                 }
               
                else//if checked in date is available
                {
                    Date d1,d2;
                    d1=dateoperations.converttodate(duedate[j]);
                    d2=dateoperations.converttodate(date_in[j]);
                    long diffInMillies = d2.getTime()- d1.getTime();
                    nod=(int)TimeUnit.DAYS.convert(diffInMillies,TimeUnit.MILLISECONDS);
                    System.out.println(" else numbr of days:"+nod+"for loan id"+lid[j]);
                }
                
              
                    if(no_of_days>0|| nod>0)//checked in after the due date
                    {
                        qry="select * from fines where loan_id="+lid[j];
                        rs=stmt.executeQuery(qry);
                        while(rs.next())
                        {
                             exists=exists+1;
                             paid=rs.getBoolean("paid");
                             fineamt=rs.getDouble("fine_amt");
                            
                        }
                        if(exists==1)//lid alrdy exists
                        {
                            if(paid==true)//previous fine is paid
                            {
                                //do nothing
                            }
                            else
                            {
                                if(no_of_days>0)
                                {
                                       newfine=(double)no_of_days*0.25;
                                       System.out.println("the fine amount for "+lid[j]+" is "+newfine);
                                       newfine=fineamt+newfine;
                                       qry="UPDATE `fines` SET `fine_amt` ="+newfine+" WHERE `loan_id` ="+lid[j]+";";
                                       int executed=stmt.executeUpdate(qry);
                                       if(executed==1)
                                       {
                                           //display messge
                                       }
                                }
                                if(nod>0)
                                {
                                       
                                        newfine=(double)nod*0.25;
                                        System.out.println("the fine amount for "+lid[j]+" is "+newfine);
                                        
                                        qry="UPDATE `fines` SET `fine_amt` ="+newfine+" WHERE `loan_id` ="+lid[j]+";";
                                        int executed=stmt.executeUpdate(qry);
                                        if(executed==1)
                                        {
                                            //display messge
                                        }
                                 }
                            }
                         }
                        else
                        {
                            if(no_of_days>0)
                            {
                                newfine=(double)no_of_days*0.25;
                            }
                            else
                            {
                                newfine=(double)nod*0.25;
                            }
                            System.out.println("the fine amount for "+lid[j]+" is "+newfine);
                            qry="insert into fines values("+lid[j]+","+newfine+","+false+");";
                            int executed=stmt.executeUpdate(qry);
                            if(executed==1)
                                {
                                    //display messge
                                }
                        }
                                
                    }
                    else
                    {
                                //do nothing
                    }
                }
            qry="Select f.loan_id,f.fine_amt,f.paid,bl.card_no,bl.date_in from fines f,book_loans bl where bl.loan_id=f.loan_id;";
            rs=stmt.executeQuery(qry);
            if(rs.next())
            {
                rs.previous();
                JTable table = new JTable(buildTableModel(rs));
                JOptionPane.showMessageDialog(null, new JScrollPane(table));
                 int row=table.getSelectedRow();
             if(row>0)
             {
                 BigDecimal fine=(BigDecimal)table.getValueAt(row,1);
                 int l=(int)table.getValueAt(row,0);
                 boolean p=(boolean)table.getValueAt(row,2);
                 String d=(String)table.getValueAt(row,4);
                 if(p==true)
                 {
                     JOptionPane.showMessageDialog(null,"FINE ALREADY PAID","MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                 }
                 else
                 {
                  int reply=JOptionPane.showConfirmDialog(null,"Are you sure to make a payment of " +fine+"dollars","Payment",JOptionPane.YES_NO_OPTION);
                    if(reply==JOptionPane.YES_OPTION)
                    {
                            System.out.println("came here");
                            if(d.equals("NULL"))
                            {
                                JOptionPane.showMessageDialog(null,"CHECK IN AND THEN PAY","MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                
                            }
                            else
                            {
                                qry="update fines set paid=true where loan_id="+l+";";
                                int executed=stmt.executeUpdate(qry);
                                if(executed==1)
                                System.out.println("Updated value for "+l);
                                else
                                System.out.println("Update failed value for "+l);
                           }
                     }
                 }
               }  
            }
            else
            {
               
                JOptionPane.showMessageDialog(null, "NOFINE WITH THIS CARD NO");
            }
             
            
        }
        catch(SQLException ex)
        {
            Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
            
        } catch (ParseException ex) {
            Logger.getLogger(fine.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "2934991");
            Statement stmt=conn.createStatement();
            stmt.execute("use library_server;");
            ResultSet rs;
            String qry;
            if(CnTF.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null,"please enter card no");
            }
            else{
            int cardno=Integer.parseInt(CnTF.getText());
            qry="select min(card_no) as MIN,max(card_no) AS MAX from  borrower;";
            rs=stmt.executeQuery(qry);
                int   min=0,max=0;
                while(rs.next())
                 {
                       min  =rs.getInt("MIN");
                       max =rs.getInt("MAX");
                       System.out.println( "MIN AND MAX ARE"+min+"and"+max);
                  
                 }
                
                if(cardno>max || cardno<min)//if card no is nt registerd
                 {
                    JOptionPane.showConfirmDialog(null,"card num is not valid","ERROR" ,JOptionPane.ERROR_MESSAGE);
                 }
                else{
                    qry="select sum(f.fine_amt) AS total\n" +
                    "from book_loans bl,fines f\n" +
                    "where bl.loan_id=f.loan_id AND f.paid=false AND bl.date_in!='NULL'\n" +
                    "group by bl.card_no\n" +
                    "having bl.card_no="+cardno+";";
                    rs=stmt.executeQuery(qry);
                    BigDecimal total = null;
                    while(rs.next())
                    {
                     total=rs.getBigDecimal("total");
                    }
                    int lid[]=new int[3];
                    int i=0;
                    if(total==null)
                    {
                        JOptionPane.showMessageDialog(null, "No FINE for books checked in by you,If there is still fine and you are unable to make payment,check in all the books you borowed and try","MESSAGE",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        int select=JOptionPane.showConfirmDialog(null, "Your total fine is "+total+" dollars, are you sure you want to continue the payment?");
                        if(select==JOptionPane.YES_OPTION)
                        {
                        qry="select f.loan_id AS lid,f.fine_amt,f.paid from book_loans bl,fines f where bl.date_in!='NULL' AND f.loan_id=bl.loan_id and bl.card_no="+cardno+" and paid=false;";
                        rs=stmt.executeQuery(qry);
                        while(rs.next())
                        {
                           lid[i]=rs.getInt("lid");
                           i++;
                        }  
                       for(i=0;i<lid.length;i++)
                       {
                           qry="UPDATE `fines` SET `fine_amt` =0, paid=true WHERE `loan_id` ="+lid[i]+";";
                           int executed=stmt.executeUpdate(qry);
                           if(executed==1)
                               System.out.println("executed update for loan id:"+lid[i]);
                       }
                    }
                }
            }
          }
        }
        
        catch(SQLException ex)
        {
               Logger.getLogger(search.class.getName()).log(Level.SEVERE, null, ex);
         }
       
    }//GEN-LAST:event_jButton3ActionPerformed
public void close()
    {
    WindowEvent winclosingevent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclosingevent);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         close();
        homepage h=new homepage();
        h.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CnTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
